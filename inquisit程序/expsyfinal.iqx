
<item attributeAlabel>
	/1 = "自然学科"
</item>

<item attributeBlabel>
	/1 = "人文学科"
</item>

<item targetALabel>
	/1 = "男性"
</item>

<item targetBLabel>
	/1 = "女性"
</item>

<item attributeA>
	/1 = "数学"
	/2 = "物理"
	/3 = "信科"
	/4 = "化学"

</item>

<item attributeB>
	/1 = "文学"
	/2 = "艺术"
	/3 = "哲学"
	/4 = "历史"

</item>

<item targetA>
	/1 = "男性1.jpg"
	/2 = "男性2.jpg"
	/3 = "男性3.jpg"
	/4 = "男性4.jpg"
</item>

<item targetB>
	/1 = "女性1.jpg"
	/2 = "女性2.jpg"
	/3 = "女性3.jpg"
	/4 = "女性4.jpg"
</item>

<item introinstructions>
	/ 1 = "1.在实验中，请您根据指导语要求，对呈现的词语做出按键反应~n~n2.请您先对刺激进行归类，随后开始练习~n~n3.如果您按错了键，屏幕上会呈现 ~"X~". 请尽快按另一键来更正。~n~n4.请您在保证正确的前提下，尽快做出反应~n~n5.确认理解后，请您按空格键继续"
</item>
**************************************************************************************************************
*****************************************刺激分类指导语*********************************************************************
<item category1>
    / 1 ="请您对以下词语进行归类，若该词是'<%item.attributeALabel.item.1%>'类的词汇，请按 F 键~n~n看到'<%item.attributeBLabel.item.1%>'类的词语请按 J 键~n~n~n请您尽可能正确地做出反应（在该阶段，您不会得到反馈）~n~n请按空格键开始"
</item>

<item category2>
    / 1 ="请您对以下图片进行归类，若该图片是<%item.targetALabel.1%>的图片，请按 F 键~n~n若该图片是<%item.targetBLabel.1%>的图片请按 J 键~n~n~n请您尽可能正确地做出反应（在该阶段，您不会得到反馈）~n~n请按空格键开始"
</item>

<item testinstructions>
	/ 1 = "看到<%item.attributeALabel.1%>的词语，或 <%values.currentTarget%>的图片，请按 F 键~n~n看到其他类别的刺激请按 J 键~n~n~n您的反应越快越好~n~n请按空格键开始"
</item>

<item attributeAFocusInstruct>
	/ 1 = "<%item.attributeALabel.1%>"
</item>

<item targetAFocusInstruct>
	/ 1 = "<%item.targetALabel.1%>"
</item>

<item targetBFocusInstruct>
	/ 1 = "<%item.targetBLabel.1%>"
</item>

<text introinstructions>
/ items = introinstructions
/ size = (90%, 50%)
/ position = (50%, 20%)
/ resetinterval = 20
/ valign = top
/ hjustify = center
/ vjustify = top
</text>

<text testInstructions>
/ items = testInstructions
/ size = (90%, 50%)
/ position = (50%, 30%)
/ valign = top
/ hjustify = center
/ vjustify = top
</text>
**************************************************************************************************************
**************************************************刺激分类指导语************************************************************
<text category1>
/ items = category1
/ size = (90%, 50%)
/ position = (50%, 30%)
/ valign = top
/ hjustify = center
/ vjustify = top
</text>

<text category2>
/ items = category2
/ size = (90%, 50%)
/ position = (50%, 30%)
/ valign = top
/ hjustify = center
/ vjustify = top
</text>

<text topFocusInstruct>
/ items = ("")
/ valign = bottom
/ halign = center
/ position = (50%, 12.5%)
/ size = (100%, 12%)
/ txcolor = aqua
</text>

<text orInstruct>
/ items = ("or")
/ valign = center
/ halign = center
/ position = (50%, 12.5%)
/ txcolor = white
/ fontstyle = ("Arial", 3%)
</text>

<text bottomFocusInstruct>
/ valign = top
/ items = attributeAFocusInstruct
/ halign = center
/ position = (50%, 15%)
/ size = (100%, 12%)
/ txcolor = yellow
</text>

<text attributeA>
/ items = attributeA
/ fontstyle = ("Arial", 10%)
/ txcolor = yellow
</text>

<text attributeB>
/ items = attributeB
/ fontstyle = ("Arial", 10%)
/ txcolor = yellow
</text>

<picture targetA>
/ items = targetA
/ size = (200,200)
/ halign = center
/ valign = center
</picture>

<picture targetB>
/ items = targetB
/ size = (200,200)
/ halign = center
/ valign = center
</picture>

<text error>
/ position = (50%, 75%)
/ items = ("×")
/ color = red
/ fontstyle = ("Arial", 10%)
</text>

<text attributeAFocusLabel>
/ items = attributeALabel
/ valign = top
/ halign = center
/ position = (50%, 5%)
/ txcolor = yellow
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>

<text targetFocusLabel>
/ items = ("<%values.currentTarget%>")
/ valign = top
/ halign = center
/ position = (50%, 5%)
/ txcolor = aqua
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>

<text orLabel>
/ items = ("or")
/ valign = top
/ halign = center
/ position = (50%, 10%)
/ txcolor = white
/ fontstyle = ("Arial", 3%)
/ erase = false
</text>

<text orAttributeAFocusLabel>
/ items = attributeALabel
/ valign = top
/ halign = center
/ position = (50%, 15%)
/ txcolor = yellow
/ fontstyle = ("Arial", 4%)
/ erase = false
</text>

<text progress>
/ position = (50%, 95%)
/ items = ("(Block <%expressions.currentblocknumber%> of <%expressions.totalblockcount %>)")
/ color = white
/ fontstyle = ("Arial", 2%)
</text>

<shape eraseLabels>
/ color = black
/ shape = rectangle
/ size = (50%, 20%)
/ position = (50%,  10%)
</shape>
**************************************************************************************************************
*******************************************************练习正确率过低/分类错误警示语*******************************************************
<text alerttxt>
	/hjustify = center
	/items = ("您的正确率过低，请您认真阅读指导语并确认您理解后，按空格键进入下一次练习。如果您对本实验有疑问，请您联系主试。")
	/size = (1000,300)
	/fontstyle = ("宋体", 24pt)
</text>

<text alertcategory>
	/hjustify = center
	/items = ("您的分类不正确，请您联系主试。")
	/size = (1000,300)
	/fontstyle = ("宋体", 24pt)
</text>
**************************************************************************************************************
*******************************************************分类trial*******************************************************
<trial category1>
/ stimulustimes = [1=category1]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial category2>
/ stimulustimes = [1=category2]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial attributeA>
/ validresponse = ("J", "F")
/ correctresponse = ("F")
/ stimulusframes = [1 = attributeA]
/ posttrialpause = 250
</trial>

<trial attributeB>
/ validresponse = ("J", "F")
/ correctresponse = ("J")
/ stimulusframes = [1 = attributeB]
/ posttrialpause = 250
</trial>

<trial targetALeft>
/ validresponse = ("J", "F")
/ correctresponse = ("F")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

<trial targetARight>
/ validresponse = ("J", "F")
/ correctresponse = ("J")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

<trial targetBLeft>
/ validresponse = ("J", "F")
/ correctresponse = ("J")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial targetBRight>
/ validresponse = ("J", "F")
/ correctresponse = ("F")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial introinstructions>
/ ontrialbegin = [if ( script.currentblock == "attributes" ) {values.currentTarget = item.attributeAlabel.1;} ]
/ stimulustimes = [1=introinstructions, progress]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial testinstructions>
/ stimulustimes = [1=testinstructions, topFocusInstruct, orInstruct, bottomFocusInstruct, progress]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial showAttributeLabel>
/ stimulusframes = [1=attributeAFocusLabel]
/ response = noresponse
/ recorddata = false
</trial>

<trial showLabels>
/ stimulusframes = [1=targetFocusLabel, orLabel, orAttributeAFocusLabel]
/ response = noresponse
/ recorddata = false
</trial>

<trial eraseLabels>
/ stimulusframes = [1=eraseLabels]
/ response = noresponse
/ recorddata = false
</trial>

<trial summary>
/ ontrialbegin = [values.magnitude = "little to no"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.magnitude = "slight"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.magnitude = "moderate"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.magnitude = "strong"]
/ ontrialbegin = [if (expressions.d >= 0.0) expressions.preferred = item.targetALabel.1]
/ ontrialbegin = [if (expressions.d < 0.0) expressions.preferred = item.targetBLabel.1]
/ ontrialbegin = [if (expressions.d < 0.0) expressions.notpreferred= item.targetALabel.1]
/ ontrialbegin = [if (expressions.d >= 0.0) expressions.notpreferred= item.targetBLabel.1]
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ skip = [values.skipsummary]
</trial>

<text summary>
/ items = ("Your IAT score (D) was <% expressions.d %>, which suggests a <% values.magnitude %> automatic preference for <% expressions.preferred %> compared to <% expressions.notpreferred %> of you.~n~n~nPress the spacebar to complete this session.")  
/ size = (60%, 80%)
/ hjustify = left
 </text>
**************************************************************************************************************
********************************************************练习正确率过低/分类错误警示语trial******************************************************
<trial alert>
/ stimulusframes = [1 = alerttxt]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<trial alertcategory>
/ stimulusframes = [1 = alertcategory]
/ errormessage = false
/ recorddata = false
/ timeout = 60000
</trial>

**************************************************************************************************************
**************************************************************************************************************

<block intro>
/ trials = [1 = introinstructions]
</block>
**************************************************************************************************************
*******************************************************分类任务block及警示block*******************************************************
<block category1>
/ trials = [1 = category1; 2-9 = noreplace(attributeA, attributeB)]
/ branch = [if(block.category1.percentcorrect<=50)block.alertcategory]
</block>

<block category2>
/ trials = [1 = category2; 2-9 = noreplace(targetARight, targetBLeft)]
/ branch = [if(block.category2.percentcorrect<=50)block.alertcategory]
</block>

<block alertcategory>
/ trials = [1 = alertcategory]
</block>

**************************************************************************************************************
********************************************************两类练习的block和正确率过低的警示语block******************************************************
<block short_a>
/ onblockbegin = [values.currentTarget = item.targetALabel.1; text.topFocusInstruct.1 = item.targetAFocusInstruct.1]
/ trials = [1=testInstructions; 2=showLabels;
  3-6 = noreplace(targetARight, targetBLeft);
  8,10,12,14 = noreplace(targetARight, targetBLeft);
  7,9,11,13 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ branch = [if(block.short_a.percentcorrect<80)block.alert1]
</block>

<block alert1>
/ onblockbegin = [values.currentTarget = item.targetALabel.1; text.topFocusInstruct.1 = item.targetAFocusInstruct.1]
/ trials = [1=alert; 2=testInstructions; 3=showLabels;
  4-7 = noreplace(targetARight, targetBLeft);
  8,10,12,14 = noreplace(targetARight, targetBLeft);
  9,11,13,15 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
    /branch = [if(block.alert1.percentcorrect<80)block.alert1]
</block>

<block short_b>
/ onblockbegin = [values.currentTarget = item.targetBLabel.1; text.topFocusInstruct.1 = item.targetBFocusInstruct.1]
/ trials = [1=testInstructions; 2=showLabels;
  3-6 = noreplace(targetBRight, targetALeft);
  8,10,12,14 = noreplace(targetBRight, targetALeft);
  7,9,11,13 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ branch = [if(block.short_b.percentcorrect<80)block.alert2]
</block>

<block alert2>
/ onblockbegin = [values.currentTarget = item.targetBLabel.1; text.topFocusInstruct.1 = item.targetBFocusInstruct.1]
/ trials = [1=alert; 2=testInstructions; 3=showLabels;
  4-7 = noreplace(targetARight, targetBLeft);
  8,10,12,14 = noreplace(targetARight, targetBLeft);
  9,11,13,15 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
    /branch = [if(block.alert2.percentcorrect<80)block.alert2]
</block>
**************************************************************************************************************
****************************************************调整了反应时记录**********************************************************
<block A>
/ skip = [values.extended == false && block.A.totalcount >=1]
/ onblockbegin = [values.currentTarget = item.targetALabel.1; text.topFocusInstruct.1 = item.targetAFocusInstruct.1]
/ trials = [1=testInstructions; 2=showLabels;
  3-6 = noreplace(targetARight, targetBLeft);
  8,10,12,14,16,18,20,22 = noreplace(targetARight, targetBLeft);
  7,9,11,13,15,17,19,21 = noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  <= 300 && block.A.currenttrialnumber >= 7 ) values.A1sum =  values.A1sum + 300]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  >= 3000 && block.A.currenttrialnumber >= 7 ) values.A1sum =  values.A1sum + 3000]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  <= 3000 && block.A.latency  >= 300 && block.A.currenttrialnumber >= 7 ) values.A1sum =  values.A1sum + block.A.latency]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.currenttrialnumber >= 7 ) values.A1n += 1]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  <= 300 && block.A.currenttrialnumber >= 7 ) values.A1ss =  values.A1ss  + 90000]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  >= 3000 && block.A.currenttrialnumber >= 7 ) values.A1ss =  values.A1ss  + 9000000]
/ ontrialend = [if (block.A.totalcount == 0 && block.A.latency  <= 3000 && block.A.latency  >= 300 && block.A.currenttrialnumber >= 7 ) values.A1ss =  values.A1ss  + (block.A.latency * block.A.latency)]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  <= 300 && block.A.currenttrialnumber >= 7 ) values.A2sum =  values.A2sum + 300]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  >= 3000 && block.A.currenttrialnumber >= 7 ) values.A2sum =  values.A2sum + 3000]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  <= 3000 && block.A.latency  >= 300 && block.A.currenttrialnumber >= 7 ) values.A2sum =  values.A2sum + block.A.latency]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.currenttrialnumber >= 7 ) values.A2n += 1]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  <= 300 && block.A.currenttrialnumber >= 7 ) values.A2ss =  values.A2ss  + 90000]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  >= 3000 && block.A.currenttrialnumber >= 7 ) values.A2ss =  values.A2ss  + 9000000]
/ ontrialend = [if (block.A.totalcount == 1 && block.A.latency  <= 3000 && block.A.latency  >= 300 && block.A.currenttrialnumber >= 7 ) values.A2ss =  values.A2ss  + (block.A.latency * block.A.latency)]
/ ontrialend = [if (block.A.latency  <= 3000 && block.A.latency  >= 300 && block.A.currenttrialnumber >= 7 ) values.n_correct += block.A.correct]
</block>

<block B>
/ skip = [values.extended == false && block.B.totalcount >=1]
/ onblockbegin = [values.currentTarget = item.targetBLabel.1; text.topFocusInstruct.1 = item.targetBFocusInstruct.1]
/ trials = [1=testInstructions;2=showLabels;
  3-6 = noreplace(targetBRight, targetALeft);
  8,10,12,14,16,18,20,22= noreplace(targetBRight, targetALeft);
  7,9,11,13,15,17,19,21= noreplace(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  <= 300 && block.B.currenttrialnumber >= 7 ) values.B1sum =  values.B1sum + 300]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  >= 3000 && block.B.currenttrialnumber >= 7 ) values.B1sum =  values.B1sum + 3000]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  <= 3000 && block.B.latency  >= 300 && block.B.currenttrialnumber >= 7 ) values.B1sum =  values.B1sum + block.B.latency]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.currenttrialnumber >= 7 ) values.B1n += 1]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  <= 300 && block.B.currenttrialnumber >= 7 ) values.B1ss =  values.B1ss  + 90000]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  >= 3000 && block.B.currenttrialnumber >= 7 ) values.B1ss =  values.B1ss  + 9000000]
/ ontrialend = [if (block.B.totalcount == 0 && block.B.latency  <= 3000 && block.B.latency  >= 300 && block.B.currenttrialnumber >= 7 ) values.B1ss =  values.B1ss  + (block.B.latency * block.B.latency)]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  <= 300 && block.B.currenttrialnumber >= 7 ) values.B2sum =  values.B2sum + 300]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  >= 3000 && block.B.currenttrialnumber >= 7 ) values.B2sum =  values.B2sum + 3000]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  <= 3000 && block.B.latency  >= 300 && block.B.currenttrialnumber >= 7 ) values.B2sum =  values.B2sum + block.B.latency]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.currenttrialnumber >= 7 ) values.B2n += 1]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  <= 300 && block.B.currenttrialnumber >= 7 ) values.B2ss =  values.B2ss  + 90000]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  >= 3000 && block.B.currenttrialnumber >= 7 ) values.B2ss =  values.B2ss  + 9000000]
/ ontrialend = [if (block.B.totalcount == 1 && block.B.latency  <= 3000 && block.B.latency  >= 300 && block.B.currenttrialnumber >= 7 ) values.B2ss =  values.B2ss  + (block.B.latency * block.B.latency)]
/ ontrialend = [if (block.B.latency  <= 3000 && block.B.latency  >= 300 && block.B.currenttrialnumber >= 7 ) values.n_correct += block.B.correct]
</block>

<block summary>
/ trials = [1=summary]
/ recorddata = false
</block>

<expt>
/ subjects = (1 of 2)
/ groupassignment = groupnumber
/ blocks = [1 = intro; 2 = category1; 3 = category2; 4 = short_a; 5 = short_b; 6=A; 7=B; 8=A; 9=B; 10=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/ subjects = (2 of 2)
/ groupassignment = groupnumber
/ blocks = [1 = intro; 2 = category1; 3 = category2; 4 = short_b; 5 = short_a; 6=B; 7=A; 8=B; 9=A; 10=summary]
/onexptend = [values.completed = 1]
</expt>

***********************************************************************

<data>
/file = "BriefIAT_rawdata.iqdat"
/ columns = [date, time, group, subject, blockcode, blocknum, trialcode, trialnum, response, correct, latency, 
					stimulusnumber, stimulusitem, expressions.d1, expressions.d2, expressions.d, expressions.percentcorrect]
/separatefiles = true
</data>

<summarydata >
/file = "BriefIAT_summary.iqdat"
/columns = [script.filename, script.startdate, script.starttime, script.subjectid, script.groupid, script.elapsedtime, values.completed,
expressions.d1, expressions.d2, expressions.d, expressions.percentcorrect]
</summarydata>

<values>
/completed = 0
/ A1sum = 0
/ A2sum = 0
/ B1sum = 0
/ B2sum = 0
/ A1n = 0
/ A2n = 0
/ B1n = 0
/ B2n = 0
/ A1ss = 0
/ A2ss = 0
/ B1ss = 0
/ B2ss = 0
/ magnitude = "unknown"
/ currentTarget = ""
/ n_correct = 0
</values>

<expressions>
/ A1m = values.A1sum / values.A1n
/ A2m = values.A2sum / values.A2n
/ B1m = values.B1sum / values.B1n
/ B2m = values.B2sum / values.B2n
/ A1sd = sqrt((values.A1ss - (values.A1n* (expressions.A1m * expressions.A1m))) / (values.A1n - 1))
/ A2sd = sqrt((values.A2ss - (values.A2n* (expressions.A2m * expressions.A2m))) / (values.A2n - 1))
/ B1sd = sqrt((values.B1ss - (values.B1n* (expressions.B1m * expressions.B1m))) / (values.B1n - 1))
/ B2sd = sqrt((values.B2ss - (values.B2n* (expressions.B2m * expressions.B2m))) / (values.B2n - 1))
/ sd1 = sqrt((((values.A1n - 1) * (expressions.A1sd * expressions.A1sd) + (values.B1n - 1) * (expressions.B1sd * expressions.B1sd)) + ((values.A1n + values.B1n) * ((expressions.A1m - expressions.B1m) * (expressions.A1m - expressions.B1m)) / 4) ) / (values.A1n + values.B1n - 1) )
/ sd2 = sqrt((((values.A2n - 1) * (expressions.A2sd * expressions.A2sd) + (values.B2n - 1) * (expressions.B2sd * expressions.B2sd)) + ((values.A2n + values.B2n) * ((expressions.A2m - expressions.B2m) * (expressions.A2m - expressions.B2m)) / 4) ) / (values.A2n + values.B2n - 1) )
/ d1 = (expressions.B1m - expressions.A1m) / expressions.sd1
/ d2 = (expressions.B2m - expressions.A2m) / expressions.sd2
/ d = if ( values.extended ) { (d1+d2) / 2 } else { d1 }
/ currentblocknumber = max(expt.1.currentblocknumber, expt.2.currentblocknumber)
/ preferred = "unknown"
/ notpreferred = "unknown"
/ totalblockcount = if (values.extended) {expt.1.blockcount} else {expt.1.blockcount-2}
/ percentcorrect = (values.n_correct/ (values.a1n + values.a2n + values.b1n + values.b2n)) * 100
</expressions>

<defaults>
/ fontstyle = ("Arial", 5%)
/ screencolor = black
/ txbgcolor = black
/ txcolor = white
/ minimumversion = "4.0.0.0"
</defaults>

<values>
/ skipsummary = false
/ extended = true
</values>